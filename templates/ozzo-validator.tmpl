// Code generated by github.com/kanryu/validagen. DO NOT EDIT.
package {{.Package}}

import (
{{- /* import packages defined at ValidateStruct.Import */}}
{{- range .Import}}
	"{{.}}"
{{- end}}
	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// Validate validater for {{.Name}} struct
func ({{.Receiver}} {{.Name}}) {{.MethodName}}() error {
	{{- /* validation.ValidateStruct() -> */}}
	return validation.ValidateStruct(&a,
{{- range $key, $p := .Properties}}
		{{- /* validation.Field() -> */}}
		validation.Field(&a.
		{{- /* The property outputs the toml key name unless a value is set for Property.Name */}}
		{{- with .Name}}{{.}}{{else}}{{$key}}{{end}}
		{{- if isValidIntList .In}}, validation.In(
			{{- range $i, $v := .In.Int}}{{if $i}}, {{end}}{{$v}}{{end}})
		{{- end}}
		{{- if isValidFloatList .In}}, validation.In(
			{{- range $i, $v := .In.Float}}{{if $i}}, {{end}}{{$v}}{{end}})
		{{- end}}
		{{- if isValidStringList .In}}, validation.In(
			{{- range $i, $v := .In.String}}{{if $i}}, {{end}}"{{$v}}"{{end}})
		{{- end}}
		{{- with .Length}}, validation.Length({{index . 0}},{{index . 1}}){{end}}
		{{- with .RuneLength}}, validation.RuneLength({{index . 0}},{{index . 1}}){{end}}
		{{- with .Match}}, validation.Match(regexp.MustCompile("{{.}}")){{end}}
		{{- /* boolean validators-> */}}
		{{- with .Required}}, validation.Required{{end}}
		{{- with .NotNil}}, validation.NotNil{{end}}
		{{- with .Nil}}, validation.Nil{{end}}
		{{- with .NilOrNotEmpty}}, validation.NilOrNotEmpty{{end}}
		{{- with .Empty}}, validation.Empty{{end}}
		{{- /* </ boolean validators */}}
		{{- /* is.XXX-> */}}
		{{- with .Email}}, is.Email{{end}}
		{{- with .EmailFormat}}, is.EmailFormat{{end}}
		{{- with .URL}}, is.URL{{end}}
		{{- with .RequestURL}}, is.RequestURL{{end}}
		{{- with .RequestURI}}, is.RequestURI{{end}}
		{{- with .Alpha}}, is.Alpha{{end}}
		{{- with .Digit}}, is.Digit{{end}}
		{{- with .Alphanumeric}}, is.Alphanumeric{{end}}
		{{- with .UTFLetter}}, is.UTFLetter{{end}}
		{{- with .UTFDigit}}, is.UTFDigit{{end}}
		{{- with .UTFLetterNumeric}}, is.UTFLetterNumeric{{end}}
		{{- with .UTFNumeric}}, is.UTFNumeric{{end}}
		{{- with .LowerCase}}, is.LowerCase{{end}}
		{{- with .UpperCase}}, is.UpperCase{{end}}
		{{- with .Hexadecimal}}, is.Hexadecimal{{end}}
		{{- with .HexColor}}, is.HexColor{{end}}
		{{- with .RGBColor}}, is.RGBColor{{end}}
		{{- with .Int}}, is.Int{{end}}
		{{- with .Float}}, is.Float{{end}}
		{{- with .UUIDv3}}, is.UUIDv3{{end}}
		{{- with .UUIDv4}}, is.UUIDv4{{end}}
		{{- with .UUIDv5}}, is.UUIDv5{{end}}
		{{- with .UUID}}, is.UUID{{end}}
		{{- with .CreditCard}}, is.CreditCard{{end}}
		{{- with .ISBN10}}, is.ISBN10{{end}}
		{{- with .ISBN13}}, is.ISBN13{{end}}
		{{- with .ISBN}}, is.ISBN{{end}}
		{{- with .JSON}}, is.JSON{{end}}
		{{- with .ASCII}}, is.ASCII{{end}}
		{{- with .PrintableASCII}}, is.PrintableASCII{{end}}
		{{- with .Multibyte}}, is.Multibyte{{end}}
		{{- with .FullWidth}}, is.FullWidth{{end}}
		{{- with .HalfWidth}}, is.HalfWidth{{end}}
		{{- with .VariableWidth}}, is.VariableWidth{{end}}
		{{- with .Base64}}, is.Base64{{end}}
		{{- with .DataURI}}, is.DataURI{{end}}
		{{- with .E164}}, is.E164{{end}}
		{{- with .CountryCode2}}, is.CountryCode2{{end}}
		{{- with .CountryCode3}}, is.CountryCode3{{end}}
		{{- with .DialString}}, is.DialString{{end}}
		{{- with .MAC}}, is.MAC{{end}}
		{{- with .IP}}, is.IP{{end}}
		{{- with .IPv4}}, is.IPv4{{end}}
		{{- with .IPv6}}, is.IPv6{{end}}
		{{- with .Subdomain}}, is.Subdomain{{end}}
		{{- with .Domain}}, is.Domain{{end}}
		{{- with .DNSName}}, is.DNSName{{end}}
		{{- with .Host}}, is.Host{{end}}
		{{- with .Port}}, is.Port{{end}}
		{{- with .MongoID}}, is.MongoID{{end}}
		{{- with .Latitude}}, is.Latitude{{end}}
		{{- with .Longitude}}, is.Longitude{{end}}
		{{- with .SSN}}, is.SSN{{end}}
		{{- with .Semver}}, is.Semver{{end}}
		{{- /* </ is.XXX */}}
		{{- "),"}}{{- /* </ validation.Field() */}}
{{- end}}
	){{- /* </ validation.ValidateStruct() */}}
}
