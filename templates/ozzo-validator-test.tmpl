// Code generated by github.com/kanryu/validagen. DO NOT EDIT.
package {{.Package}}
{{$name := .Name}}
{{$valid := .TestData.Valid}}
import (
	"testing"
)

// Test{{.Name}}_{{.MethodName}} a test suite for (a *{{.Name}}){{.MethodName}}()
func Test{{.Name}}_{{.MethodName}}(t *testing.T) {
	tests := []struct {
		name    string
		a       {{.Name}}
		wantErr bool
	}{
		{{/** OK TEST */ -}}
		{wantErr: false, name: "OK", a: {{.Name}}{
{{- $first := ""}}
{{- range $key, $value := .TestData.Valid}}
	{{- with $first}},{{end}}{{$first = $key}}
	{{- $key}}:{{/* */}}
	{{- with .String}}"{{range .}}{{.}}{{end}}"{{end}}
	{{- with .Int}}{{range .}}{{.}}{{end}}{{end}}
	{{- with .Float}}{{range .}}{{.}}{{end}}{{end}}
{{- end}}}},
{{- range $key1, $value1 := .TestData.Invalid}}
		{{/** NG TESTs, Add one wrong value into the correct data set */ -}}
		{wantErr: true, name: "NG for {{$key1}}", a: {{$name}}{
	{{- $first := ""}}
	{{- range $key2, $value2 := $valid}}
		{{- with $first}},{{end}}{{$first = $key2}}
		{{- $key2}}:{{/* */}}
		{{- if eq $key1 $key2}}
			{{- with $value1.String}}"{{range .}}{{.}}{{end}}"{{end}}
			{{- with $value1.Int}}{{range .}}{{.}}{{end}}{{end}}
			{{- with $value1.Float}}{{range .}}{{.}}{{end}}{{end}}
		{{- else}}
			{{- with .String}}"{{range .}}{{.}}{{end}}"{{end}}
			{{- with .Int}}{{range .}}{{.}}{{end}}{{end}}
			{{- with .Float}}{{range .}}{{.}}{{end}}{{end}}
		{{- end}}
	{{- end}}}},
{{- end}}
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			err := tt.a.{{.MethodName}}()
			if tt.wantErr {
				if err == nil {
					t.Fatalf("%q. wantErr %v, but actual err %v", tt.name, tt.wantErr, err)
				}
			} else if err != nil {
				t.Fatalf("%q. wantErr %v, but actual err occured %+v", tt.name, tt.wantErr, err)
			}
		})
	}
}

